name: Deploy to AWS Asia

on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      destroy:
        description: 'Set to true to destroy resources'
        required: true
        default: 'false'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Configure AWS CLI for the appropriate region
      - name: Configure AWS CLI
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_CN }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_CN }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region ap-south-1

      # Create S3 bucket if it doesn't exist
      - name: Create S3 bucket
        run: |
          BUCKET_NAME="statefilebackup202512"
          if ! aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
            aws s3api create-bucket --bucket "$BUCKET_NAME" --region ap-south-1 --create-bucket-configuration LocationConstraint=ap-south-1
          fi

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7

      # Change directory to where main.tf is located
      - name: Change directory
        run: cd vpc-flow-logs

      # Initialize Terraform with S3 backend
      - name: Terraform Init
        run: terraform init
        working-directory: vpc-flow-logs

      - name: Terraform Plan
        run: terraform plan
        working-directory: vpc-flow-logs

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: vpc-flow-logs

      # Destroy Terraform resources
      - name: Terraform Destroy
        if: github.event.inputs.destroy == 'true'
        run: terraform destroy -auto-approve
        working-directory: vpc-flow-logs

      # Empty and delete S3 bucket
      - name: Empty and delete S3 bucket
        if: github.event.inputs.destroy == 'true'
        run: |
          BUCKET_NAME="flow-logs-bucketvpc07457e1-cn-northwest-1"
          # Delete all objects
          aws s3 rm s3://$BUCKET_NAME --recursive
          # Delete all object versions
          aws s3api list-object-versions --bucket "$BUCKET_NAME" --query 'Versions[].{Key:Key,VersionId:VersionId}' --output text | while read key version; do
            aws s3api delete-object --bucket "$BUCKET_NAME" --key "$key" --version-id "$version"
          done
          # Delete all multipart uploads
          aws s3api list-multipart-uploads --bucket "$BUCKET_NAME" --query 'Uploads[].{Key:Key,UploadId:UploadId}' --output text | while read key upload_id; do
            aws s3api abort-multipart-upload --bucket "$BUCKET_NAME" --key "$key" --upload-id "$upload_id"
          done
          # Delete the bucket
          aws s3api delete-bucket --bucket "$BUCKET_NAME" --region cn-northwest-1
        # create tag
        
      - name: Create tag with current date
        run: |
          DATE=$(date +'%Y-%m-%d')
          git tag "$DATE"
          git push origin "$DATE"
